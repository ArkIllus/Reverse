// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api/achievement.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Minipb {

  /// <summary>Holder for reflection information generated from api/achievement.proto</summary>
  public static partial class AchievementReflection {

    #region Descriptor
    /// <summary>File descriptor for api/achievement.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AchievementReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVhcGkvYWNoaWV2ZW1lbnQucHJvdG8SBm1pbmlwYiJmCg9BY2hpZXZlbWVu",
            "dERhdGESEQoJRmlyc3RNZWV0GAEgASgFEhAKCE92ZXJsb2FkGAIgASgFEgwK",
            "BFBhc3MYAyABKAUSDAoEQ2FrZRgEIAEoBRISCgpGaXJzdE1hZ2ljGAUgASgF",
            "QgdaBS4vYXBpYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Minipb.AchievementData), global::Minipb.AchievementData.Parser, new[]{ "FirstMeet", "Overload", "Pass", "Cake", "FirstMagic" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AchievementData : pb::IMessage<AchievementData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AchievementData> _parser = new pb::MessageParser<AchievementData>(() => new AchievementData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AchievementData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Minipb.AchievementReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AchievementData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AchievementData(AchievementData other) : this() {
      firstMeet_ = other.firstMeet_;
      overload_ = other.overload_;
      pass_ = other.pass_;
      cake_ = other.cake_;
      firstMagic_ = other.firstMagic_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AchievementData Clone() {
      return new AchievementData(this);
    }

    /// <summary>Field number for the "FirstMeet" field.</summary>
    public const int FirstMeetFieldNumber = 1;
    private int firstMeet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FirstMeet {
      get { return firstMeet_; }
      set {
        firstMeet_ = value;
      }
    }

    /// <summary>Field number for the "Overload" field.</summary>
    public const int OverloadFieldNumber = 2;
    private int overload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Overload {
      get { return overload_; }
      set {
        overload_ = value;
      }
    }

    /// <summary>Field number for the "Pass" field.</summary>
    public const int PassFieldNumber = 3;
    private int pass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Pass {
      get { return pass_; }
      set {
        pass_ = value;
      }
    }

    /// <summary>Field number for the "Cake" field.</summary>
    public const int CakeFieldNumber = 4;
    private int cake_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Cake {
      get { return cake_; }
      set {
        cake_ = value;
      }
    }

    /// <summary>Field number for the "FirstMagic" field.</summary>
    public const int FirstMagicFieldNumber = 5;
    private int firstMagic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FirstMagic {
      get { return firstMagic_; }
      set {
        firstMagic_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AchievementData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AchievementData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirstMeet != other.FirstMeet) return false;
      if (Overload != other.Overload) return false;
      if (Pass != other.Pass) return false;
      if (Cake != other.Cake) return false;
      if (FirstMagic != other.FirstMagic) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FirstMeet != 0) hash ^= FirstMeet.GetHashCode();
      if (Overload != 0) hash ^= Overload.GetHashCode();
      if (Pass != 0) hash ^= Pass.GetHashCode();
      if (Cake != 0) hash ^= Cake.GetHashCode();
      if (FirstMagic != 0) hash ^= FirstMagic.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FirstMeet != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FirstMeet);
      }
      if (Overload != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Overload);
      }
      if (Pass != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Pass);
      }
      if (Cake != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Cake);
      }
      if (FirstMagic != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FirstMagic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FirstMeet != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FirstMeet);
      }
      if (Overload != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Overload);
      }
      if (Pass != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Pass);
      }
      if (Cake != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Cake);
      }
      if (FirstMagic != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FirstMagic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FirstMeet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstMeet);
      }
      if (Overload != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Overload);
      }
      if (Pass != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pass);
      }
      if (Cake != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cake);
      }
      if (FirstMagic != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstMagic);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AchievementData other) {
      if (other == null) {
        return;
      }
      if (other.FirstMeet != 0) {
        FirstMeet = other.FirstMeet;
      }
      if (other.Overload != 0) {
        Overload = other.Overload;
      }
      if (other.Pass != 0) {
        Pass = other.Pass;
      }
      if (other.Cake != 0) {
        Cake = other.Cake;
      }
      if (other.FirstMagic != 0) {
        FirstMagic = other.FirstMagic;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FirstMeet = input.ReadInt32();
            break;
          }
          case 16: {
            Overload = input.ReadInt32();
            break;
          }
          case 24: {
            Pass = input.ReadInt32();
            break;
          }
          case 32: {
            Cake = input.ReadInt32();
            break;
          }
          case 40: {
            FirstMagic = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FirstMeet = input.ReadInt32();
            break;
          }
          case 16: {
            Overload = input.ReadInt32();
            break;
          }
          case 24: {
            Pass = input.ReadInt32();
            break;
          }
          case 32: {
            Cake = input.ReadInt32();
            break;
          }
          case 40: {
            FirstMagic = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
